/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MoodNFT,
  MoodNFTInterface,
} from "../../../contracts/contracts/MoodNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "MoodNFTMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mintMoodNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161166038038061166083398101604081905261002f9161013f565b3360405180604001604052806007815260200166135bdbd913919560ca1b815250604051806040016040528060048152602001631353d3d160e21b815250816000908161007c9190610294565b5060016100898282610294565b5050506001600160a01b0381166100ba57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100c3816100d7565b5060086100d08282610294565b5050610352565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561015157600080fd5b81516001600160401b0381111561016757600080fd5b8201601f8101841361017857600080fd5b80516001600160401b0381111561019157610191610129565b604051601f8201601f19908116603f011681016001600160401b03811182821017156101bf576101bf610129565b6040528181528282016020018610156101d757600080fd5b60005b828110156101f6576020818501810151838301820152016101da565b50600091810160200191909152949350505050565b600181811c9082168061021f57607f821691505b60208210810361023f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561028f57806000526020600020601f840160051c8101602085101561026c5750805b601f840160051c820191505b8181101561028c5760008155600101610278565b50505b505050565b81516001600160401b038111156102ad576102ad610129565b6102c1816102bb845461020b565b84610245565b6020601f8211600181146102f557600083156102dd5750848201515b600019600385901b1c1916600184901b17845561028c565b600084815260208120601f198516915b828110156103255787850151825560209485019460019092019101610305565b50848210156103435786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6112ff806103616000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063b88d4fde11610071578063b88d4fde14610248578063c87b56dd1461025b578063e985e9c51461026e578063f2fde38b14610281578063f4b0edcf1461029457600080fd5b806370a0823114610201578063715018a6146102145780638da5cb5b1461021c57806395d89b411461022d578063a22cb4651461023557600080fd5b806318160ddd116100f457806318160ddd146101a357806323b872dd146101b557806342842e0e146101c857806355f804b3146101db5780636352211e146101ee57600080fd5b806301ffc9a71461012657806306fdde031461014e578063081812fc14610163578063095ea7b31461018e575b600080fd5b610139610134366004610dde565b6102a7565b60405190151581526020015b60405180910390f35b6101566102f9565b6040516101459190610e4b565b610176610171366004610e5e565b61038b565b6040516001600160a01b039091168152602001610145565b6101a161019c366004610e93565b6103b4565b005b6007545b604051908152602001610145565b6101a16101c3366004610ebd565b6103c3565b6101a16101d6366004610ebd565b610453565b6101a16101e9366004610f8a565b610473565b6101766101fc366004610e5e565b610487565b6101a761020f366004610fd3565b610492565b6101a16104da565b6006546001600160a01b0316610176565b6101566104ee565b6101a1610243366004610fee565b6104fd565b6101a161025636600461102a565b610508565b610156610269366004610e5e565b610520565b61013961027c3660046110a6565b610588565b6101a161028f366004610fd3565b6105b6565b6101a76102a2366004610fd3565b6105f4565b60006001600160e01b031982166380ac58cd60e01b14806102d857506001600160e01b03198216635b5e139f60e01b145b806102f357506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610308906110d9565b80601f0160208091040260200160405190810160405280929190818152602001828054610334906110d9565b80156103815780601f1061035657610100808354040283529160200191610381565b820191906000526020600020905b81548152906001019060200180831161036457829003601f168201915b5050505050905090565b60006103968261065f565b506000828152600460205260409020546001600160a01b03166102f3565b6103bf828233610698565b5050565b6001600160a01b0382166103f257604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006103ff8383336106a5565b9050836001600160a01b0316816001600160a01b03161461044d576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016103e9565b50505050565b61046e83838360405180602001604052806000815250610508565b505050565b61047b61079e565b60086103bf828261115a565b60006102f38261065f565b60006001600160a01b0382166104be576040516322718ad960e21b8152600060048201526024016103e9565b506001600160a01b031660009081526003602052604090205490565b6104e261079e565b6104ec60006107cb565b565b606060018054610308906110d9565b6103bf33838361081d565b6105138484846103c3565b61044d33858585856108bc565b606061052b8261065f565b5060006105366109e7565b905060008151116105565760405180602001604052806000815250610581565b80610560846109f6565b604051602001610571929190611219565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6105be61079e565b6001600160a01b0381166105e857604051631e4fbdf760e01b8152600060048201526024016103e9565b6105f1816107cb565b50565b600780546000918261060583611248565b90915550506007546106178382610a89565b604080516001600160a01b0385168152602081018390527f1df6bf494ad5d72e1f8cdcb6a1aaeb290b552e8649038e1d964adbeee430ece5910160405180910390a192915050565b6000818152600260205260408120546001600160a01b0316806102f357604051637e27328960e01b8152600481018490526024016103e9565b61046e8383836001610aa3565b6000828152600260205260408120546001600160a01b03908116908316156106d2576106d2818486610ba9565b6001600160a01b03811615610710576106ef600085600080610aa3565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b0385161561073f576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6006546001600160a01b031633146104ec5760405163118cdaa760e01b81523360048201526024016103e9565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661084f57604051630b61174360e31b81526001600160a01b03831660048201526024016103e9565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b156109e057604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906108fe90889088908790879060040161126f565b6020604051808303816000875af1925050508015610939575060408051601f3d908101601f19168201909252610936918101906112ac565b60015b6109a2573d808015610967576040519150601f19603f3d011682016040523d82523d6000602084013e61096c565b606091505b50805160000361099a57604051633250574960e11b81526001600160a01b03851660048201526024016103e9565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b146109de57604051633250574960e11b81526001600160a01b03851660048201526024016103e9565b505b5050505050565b606060088054610308906110d9565b60606000610a0383610c0d565b600101905060008167ffffffffffffffff811115610a2357610a23610efa565b6040519080825280601f01601f191660200182016040528015610a4d576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610a5757509392505050565b6103bf828260405180602001604052806000815250610ce5565b8080610ab757506001600160a01b03821615155b15610b79576000610ac78461065f565b90506001600160a01b03831615801590610af35750826001600160a01b0316816001600160a01b031614155b8015610b065750610b048184610588565b155b15610b2f5760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016103e9565b8115610b775783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610bb4838383610cfd565b61046e576001600160a01b038316610be257604051637e27328960e01b8152600481018290526024016103e9565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016103e9565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610c4c5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610c78576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610c9657662386f26fc10000830492506010015b6305f5e1008310610cae576305f5e100830492506008015b6127108310610cc257612710830492506004015b60648310610cd4576064830492506002015b600a83106102f35760010192915050565b610cef8383610d63565b61046e3360008585856108bc565b60006001600160a01b03831615801590610d5b5750826001600160a01b0316846001600160a01b03161480610d375750610d378484610588565b80610d5b57506000828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160a01b038216610d8d57604051633250574960e11b8152600060048201526024016103e9565b6000610d9b838360006106a5565b90506001600160a01b0381161561046e576040516339e3563760e11b8152600060048201526024016103e9565b6001600160e01b0319811681146105f157600080fd5b600060208284031215610df057600080fd5b813561058181610dc8565b60005b83811015610e16578181015183820152602001610dfe565b50506000910152565b60008151808452610e37816020860160208601610dfb565b601f01601f19169290920160200192915050565b6020815260006105816020830184610e1f565b600060208284031215610e7057600080fd5b5035919050565b80356001600160a01b0381168114610e8e57600080fd5b919050565b60008060408385031215610ea657600080fd5b610eaf83610e77565b946020939093013593505050565b600080600060608486031215610ed257600080fd5b610edb84610e77565b9250610ee960208501610e77565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60008067ffffffffffffffff841115610f2b57610f2b610efa565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff82111715610f5a57610f5a610efa565b604052838152905080828401851015610f7257600080fd5b83836020830137600060208583010152509392505050565b600060208284031215610f9c57600080fd5b813567ffffffffffffffff811115610fb357600080fd5b8201601f81018413610fc457600080fd5b610d5b84823560208401610f10565b600060208284031215610fe557600080fd5b61058182610e77565b6000806040838503121561100157600080fd5b61100a83610e77565b91506020830135801515811461101f57600080fd5b809150509250929050565b6000806000806080858703121561104057600080fd5b61104985610e77565b935061105760208601610e77565b925060408501359150606085013567ffffffffffffffff81111561107a57600080fd5b8501601f8101871361108b57600080fd5b61109a87823560208401610f10565b91505092959194509250565b600080604083850312156110b957600080fd5b6110c283610e77565b91506110d060208401610e77565b90509250929050565b600181811c908216806110ed57607f821691505b60208210810361110d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561046e57806000526020600020601f840160051c8101602085101561113a5750805b601f840160051c820191505b818110156109e05760008155600101611146565b815167ffffffffffffffff81111561117457611174610efa565b6111888161118284546110d9565b84611113565b6020601f8211600181146111bc57600083156111a45750848201515b600019600385901b1c1916600184901b1784556109e0565b600084815260208120601f198516915b828110156111ec57878501518255602094850194600190920191016111cc565b508482101561120a5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6000835161122b818460208801610dfb565b83519083019061123f818360208801610dfb565b01949350505050565b60006001820161126857634e487b7160e01b600052601160045260246000fd5b5060010190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906112a290830184610e1f565b9695505050505050565b6000602082840312156112be57600080fd5b815161058181610dc856fea264697066735822122041cef36e9e3ba971a0194c28c1313bc2f2b737717b9d76d5816d6687a51fc59a64736f6c634300081c0033";

type MoodNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MoodNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MoodNFT__factory extends ContractFactory {
  constructor(...args: MoodNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    baseURI: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(baseURI, overrides || {});
  }
  override deploy(
    baseURI: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(baseURI, overrides || {}) as Promise<
      MoodNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MoodNFT__factory {
    return super.connect(runner) as MoodNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MoodNFTInterface {
    return new Interface(_abi) as MoodNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MoodNFT {
    return new Contract(address, _abi, runner) as unknown as MoodNFT;
  }
}
